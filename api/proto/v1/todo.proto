syntax = "proto3";
package v1;
option go_package = "api/v1;v1";

import "google/api/annotations.proto";

service Todo {
  rpc createTask (CreateTaskRequest) returns (CreateTaskResponse){
    option (google.api.http) = {
      post: "/v1/todo"
      body: "task"
    };
  };
  rpc readTask (ReadTaskRequest) returns (ReadTaskResponse){
    option (google.api.http) = {
      get: "/v1/todo/{id}"
    };
  };
  rpc updateTask (UpdateTaskRequest) returns (UpdateTaskResponse){
    option (google.api.http) = {
      put: "/v1/todo/{task.id}"
      body: "task"
    };
  };
  rpc deleteTask (DeleteTaskRequest) returns (DeleteTaskResponse){
    option (google.api.http) = {
      delete: "/v1/todo/{id}"
    };
  };
  rpc listTasksStream (ListTaskStreamRequest) returns (stream ListTaskStreamResponse){
    option (google.api.http) = {
      get: "/v1/todo/stream"
    };
  };
  rpc listTasks (ListTaskRequest) returns  (ListTaskResponse){
    option (google.api.http) = {
      get: "/v1/todo"
    };
  };
}

message Task {
  int64 id = 1;
  bool status = 2;
  string description = 3;
}

message CreateTaskRequest {
  Task task = 1;
}

message CreateTaskResponse {
  Task task = 1;
}

message ReadTaskRequest {
  int64 id = 1;
}

message ReadTaskResponse {
  Task task = 1;
}

message UpdateTaskRequest {
  Task task = 1;
}

message UpdateTaskResponse {
  Task task = 1;
}

message DeleteTaskRequest {
  int64 id = 1;
}

message DeleteTaskResponse {
  bool success = 1;
}

message ListTaskRequest {
  uint32 limit = 1;
  uint32 offset = 2;
}

message ListTaskResponse {
  uint32 total = 1;
  uint32 limit = 2;
  uint32 offset = 3;
  repeated Task tasks = 4;
}

message ListTaskStreamRequest {
  uint32 concurrency = 1;
  uint32 limit = 2;
  uint32 offset = 3;
}

message ListTaskStreamResponse {
  uint32 total = 1;
  uint32 limit = 2;
  uint32 offset = 3;
  repeated Task tasks = 4;
}

